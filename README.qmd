---
title: "FHIR to XML Mapping Middleware"
format: gfm
---

# FHIR to XML Mapping System

This project is a modular PHP middleware that maps FHIR-formatted JSON data into CollaborateMD-compatible XML payloads. It is designed for high configurability, clarity, and real-world healthcare claims integration.

## Features

-  **JSON-driven field mapping** with support for nested paths and grouped tags
-  **Modular mappers** for each FHIR resource (`Patient`, `Practitioner`, `Claim`, `Coverage`, etc.)
-  **Loop handling** for arrays like `item[]`, `diagnosis[]`, etc.
-  **Grouped elements** like `<Address>` or `<Qualification>` from flat paths (`Address.City`)
-  **FHIR reference deferral**: adds `resolveLater="true"` for unresolved external references
-  **Composite mapping support**: e.g. inline `<Policy>` under `<Patient>`
-  **Auto-save XML** to file in the `output/` directory
-  Cleanly formatted XML via PHP's native `DOMDocument`

## Directory Structure

```
src/
â”œâ”€â”€ Mapping/
â”‚   â”œâ”€â”€ MapperInterface.php
â”‚   â”œâ”€â”€ BaseMapper.php          # Shared logic for all mappers
â”‚   â”œâ”€â”€ ClaimMapper.php         # Uses claim_mapping.json
â”‚   â”œâ”€â”€ PatientMapper.php
â”‚   â”œâ”€â”€ CoverageMapper.php
â”‚   â”œâ”€â”€ PractitionerMapper.php
â”‚   â”œâ”€â”€ OrganizationMapper.php
â”‚   â”œâ”€â”€ CompositeClaimMapper.php  # Final assembler for CollaborateMD format
config/
â”‚   â”œâ”€â”€ *.json                  # Mapping definitions per resource
public/
â”œâ”€â”€ index.php                  # Main entry point
output/
â”œâ”€â”€ claim-output.xml           # Saved XML payloads
FHIR-*.json                    # Input data (FHIR resource examples)
vendor/                        # Composer dependencies
```

## Running the Script

```bash
php public/index.php
```

This generates and echoes the mapped XML from your configured input files.

To save to file:

```php
// Inside index.php
$doc->save(__DIR__ . '/../output/claim-output.xml');
```

## ðŸ›  Configuration

This system depends on JSON mapping files in `config/`, which define how FHIR paths are translated to XML elements.

### Example: `patient_mapping.json`

```json
{
  "name[0].given[0]": "FirstName",
  "name[0].family": "LastName",
  "birthDate": "BirthDate",
  "telecom[0].value": "HomePhone",
  "address[0].line[0]": "Address.Line1",
  "address[0].city": "Address.City"
}
```

### Special Syntax:

- `"group.subfield"` â†’ renders `<group><subfield>...</subfield></group>`
- `"array[].code"` â†’ loops over `array[]` and places each `code` inside the parent tag

### Reference Handling:

If a value is a FHIR reference (e.g., `"Patient/example"`), the output will include:

```xml
<PatientReference resolveLater="true">Patient/example</PatientReference>
```

This allows external systems to resolve links after XML generation.

## How It Works

- Each mapper loads its mapping file and transforms a FHIR resource into an XML DOMElement
- `BaseMapper` handles:
  - `extractValue()` from FHIR paths
  - tag grouping
  - array loops
  - date formatting (`YYYY-MM-DD` â†’ `MM/DD/YYYY`)
  - reference deferral logic
- `CompositeClaimMapper` orchestrates the final namespaced CollaborateMD structure

## Requirements

- PHP 8.0 or later
- Composer (for autoloading)

## License

MIT License

---

Shepherd Ncube â€” 2025
